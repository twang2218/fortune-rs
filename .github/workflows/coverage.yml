name: coverage

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  coverage:
    environment: coverage
    name: 'Coverage: ${{ matrix.job.target }} (${{ matrix.job.os }})'
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        job:
          - { target: x86_64-unknown-linux-gnu    , os: ubuntu-22.04, dpkg_arch: amd64,            use-cross: true }
    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.job.target }}

    - name: Show version information (Rust, cargo, GCC)
      shell: bash
      run: |
        gcc --version || true
        rustup -V
        rustup toolchain list
        rustup default
        cargo -V
        rustc -V
        
    - name: Coverage
      id: coverage
      shell: bash
      if: matrix.job.target == 'x86_64-unknown-linux-gnu'
      run: |
        echo "Preparing Coverage..."
        sudo apt-get -y update
        sudo apt-get -y install fortune pkg-config libssl-dev
        export PATH="$PATH:/usr/games"

        echo "Update tests/{data,data2} .dat files to local system"
        find tests/data -type f ! -name "*.dat" -exec strfile {} \;
        find tests/data2 -type f ! -name "*.dat" -exec strfile {} \;
        cargo install cargo-tarpaulin

        echo "Running Coverage..."
        cargo tarpaulin --verbose --all-features --workspace --follow-exec --timeout 300 --out Xml

    - name: Upload coverage to codecov
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: true
        fail_ci_if_error: true
